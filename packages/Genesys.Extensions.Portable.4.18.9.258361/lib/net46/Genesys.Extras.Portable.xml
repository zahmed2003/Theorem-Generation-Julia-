<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Genesys.Extras.Portable</name>
    </assembly>
    <members>
        <member name="T:Genesys.Extras.Collections.IKeyValuePair`2">
            <summary>
            Serializer interface
            </summary>
        </member>
        <member name="P:Genesys.Extras.Collections.IKeyValuePair`2.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Genesys.Extras.Collections.IKeyValuePair`2.Value">
            <summary>
            Value of key
            </summary>
        </member>
        <member name="T:Genesys.Extras.Collections.IListSafe`1">
            <summary>
            Serializer interface
            </summary>
        </member>
        <member name="M:Genesys.Extras.Collections.IListSafe`1.Add(`0)">
            <summary>
            Adds a known type to the collection
            </summary>
        </member>
        <member name="M:Genesys.Extras.Collections.IListSafe`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a range of known types to the collection
            </summary>
        </member>
        <member name="T:Genesys.Extras.Collections.KeyValueList`2">
            <summary>
            Serializable Key Value List strongly typed
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <remarks></remarks>
        </member>
        <member name="P:Genesys.Extras.Collections.KeyValueList`2.SelectedItem">
            <summary>
            Item last selected from list
            </summary>
        </member>
        <member name="F:Genesys.Extras.Collections.KeyValueList`2.Serializer">
            <summary>
            Serialize and de-serialize
            </summary>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValueList`2.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValueList`2.Add(`0,`1)">
            <summary>
            Normalizes and Adds a new member to the list
            </summary>
            <param name="key">Key of item to add</param>
            <param name="value">Value of item to add</param>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValueList`2.Remove(`0)">
            <summary>
            Remove a member from the list
            </summary>
            <param name="key"></param>
            <remarks></remarks>
        </member>
        <member name="P:Genesys.Extras.Collections.KeyValueList`2.Item(`0)">
            <summary>
            Null safe and self-normalizing indexer
            </summary>
            <param name="key">Item to get/set based on key index match</param>
            <returns>Get returns item from list, or not found will return new instantiation. Set will add/update match by key.</returns>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValueList`2.GetValue(`0)">
            <summary>
            Adds another member to the list
            </summary>
            <param name="key">Key to search</param>
            <remarks>Returns value if found, else the default value for the type</remarks>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValueList`2.ToString">
            <summary>
            Returns General format
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValueList`2.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats data according to requesting format
            </summary>
            <param name="format">G: Key Value/r/n, CD: Key,Value/r/n, PD: Key|Value/r/n, QS: ?Key1=Value18Key2=Value2</param>
            <param name="formatProvider">ICustomFormatter compatible class</param>
            <returns>Key and/or Value formatted</returns>
        </member>
        <member name="T:Genesys.Extras.Collections.KeyValueListString">
            <summary>
            Serializable Key Value List strongly typed as string
            </summary>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValueListString.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Genesys.Extras.Collections.KeyValuePairSafe`2">
            <summary>
            Simple serializable KeyValuePair strongly typed
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <remarks></remarks>
        </member>
        <member name="F:Genesys.Extras.Collections.KeyValuePairSafe`2.keyField">
            <summary>
            Key
            </summary>
        </member>
        <member name="F:Genesys.Extras.Collections.KeyValuePairSafe`2.valueField">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Genesys.Extras.Collections.KeyValuePairSafe`2.Key">
            <summary>
            Key, self-initializes to be null safe
            </summary>
        </member>
        <member name="P:Genesys.Extras.Collections.KeyValuePairSafe`2.Value">
            <summary>
            Value, self-initializes to be null safe
            </summary>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValuePairSafe`2.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValuePairSafe`2.#ctor(`0,`1)">
            <summary>
            Constructor
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValuePairSafe`2.GetHashCode">
            <summary>
            Unique hash of (Key.GetHashCode() * 17 + Value.GetHashCode());
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValuePairSafe`2.Equals(Genesys.Extras.Collections.KeyValuePairSafe{`0,`1})">
            <summary>
            Default comparer
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValuePairSafe`2.ToString">
            <summary>
            Returns General format
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValuePairSafe`2.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats data according to requesting format
            </summary>
            <param name="format">G: Key Value, C: Key, Value, EQ: Key=Value, EQS: Key = Value</param>
            <param name="formatProvider">ICustomFormatter compatible class</param>
            <returns>Key and/or Value formatted</returns>
        </member>
        <member name="T:Genesys.Extras.Collections.KeyValuePairSafeComparer`2">
            <summary>
            Compares based on key and value comparison. 
            HashCode is immutable based on Key + Value calculation on first call of GetHashCode().
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValuePairSafeComparer`2.GetHashCode(Genesys.Extras.Collections.KeyValuePairSafe{`0,`1})">
            <summary>
            Immutable calculated hash code based on (Key.GetHashCode() * 17) + (Value.GetHashCode())
            </summary>
            <param name="obj">Object to compare, must be of type KeyValuePairSafe</param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValuePairSafeComparer`2.Equals(Genesys.Extras.Collections.KeyValuePairSafe{`0,`1},Genesys.Extras.Collections.KeyValuePairSafe{`0,`1})">
            <summary>
            Equality comparison of child key and value combination
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Collections.KeyValuePairString">
            <summary>
            Simple serializable KeyValuePair string typed
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValuePairString.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Collections.KeyValuePairString.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <remarks></remarks>
        </member>
        <member name="T:Genesys.Extras.Collections.ListSafe`1">
            <summary>
            Contains an enumerable list of types
            </summary>
        </member>
        <member name="M:Genesys.Extras.Collections.ListSafe`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Genesys.Extras.Collections.ListSafe`1.Item(`0)">
            <summary>
            Index overload
            </summary>
            <param name="key">Item to find</param>
            <returns>Item that matches key</returns>
        </member>
        <member name="M:Genesys.Extras.Collections.ListSafe`1.GetValue(`0)">
            <summary>
            Gets an item that matches key
            </summary>
            <param name="key">Item to find</param>
            <returns>Item that matches key</returns>
        </member>
        <member name="M:Genesys.Extras.Collections.ListSafe`1.Add(`0)">
            <summary>
            Normalizes and Adds a new member to the list
            </summary>
            <param name="newItem">Item to add</param>
        </member>
        <member name="M:Genesys.Extras.Collections.ListSafe`1.Remove(`0)">
            <summary>
            Remove a member from the list
            </summary>
            <param name="itemToRemove">Item to be removed</param>
        </member>
        <member name="M:Genesys.Extras.Collections.ListSafe`1.FindIndex(`0)">
            <summary>
            Finds the index
            </summary>
            <param name="key">Key of item to find</param>
            <returns>Index of item matches passed item</returns>
        </member>
        <member name="T:Genesys.Extras.Configuration.AppSettingList">
            <summary>
            Generic list of application settings from .config file
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.AppSettingList.MyWebServiceKeyName">
            <summary>
            AppSettings.config key name for MyWebService root url
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.AppSettingList.ConfigFile">
            <summary>
            File that contains these configurations
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.AppSettingList.ElementName">
            <summary>
            Name of the Xml node element
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.AppSettingList.ElementKeyName">
            <summary>
            Name of the attribute key inside Xml node
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.AppSettingList.ElementValueName">
            <summary>
            Name of the attribute value inside Xml node
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.AppSettingList.AppSettingsXDoc">
            <summary>
            Raw XML document
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.AppSettingList.StatusMessage">
            <summary>
            Status message
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.AppSettingList.AllowDuplicates">
            <summary>
            Setting to allow duplicates
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.AppSettingList.ThrowException">
            <summary>
            Setting to throw exception if rules are broken
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingList.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingList.#ctor(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="xmlRaw">Raw Xml string containing all data</param>
            <param name="configFile">Path\File of the source configuration file</param>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingList.Load">
            <summary>
            Loads all values from config file
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingList.GetValue(System.String)">
            <summary>
            Gets value for a key
            </summary>
            <param name="key">Key of the element</param>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingList.FindIndex(System.String)">
            <summary>
            Finds the index
            </summary>
            <param name="key"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingList.Add(Genesys.Extras.Configuration.AppSettingSafe)">
            <summary>
            Adds float item, maintaining identity key
            </summary>
            <param name="itemToAdd"></param>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingList.Add(System.String,System.String)">
            <summary>
            Normalizes and Adds a new member to the list
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingList.Remove(System.String)">
            <summary>
            Remove a member from the list
            </summary>
            <param name="key"></param>
            <remarks></remarks>
        </member>
        <member name="T:Genesys.Extras.Configuration.AppSettingSafe">
            <summary>
            Container class for connection strings
            </summary>
        </member>
        <member name="T:Genesys.Extras.Configuration.AppSettingSafe.XmlElements">
            <summary>
            Element names
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.AppSettingSafe.XmlElements.AppSettings">
            <summary>
            appSettings element
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.AppSettingSafe.XmlElements.Add">
            <summary>
            Add element
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.AppSettingSafe.XmlElements.Clear">
            <summary>
            Clear element
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.AppSettingSafe.XmlElements.Remove">
            <summary>
            Remove element
            </summary>
        </member>
        <member name="T:Genesys.Extras.Configuration.AppSettingSafe.XmlAttributes">
            <summary>
            Element names
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.AppSettingSafe.XmlAttributes.Key">
            <summary>
            appSettings element
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.AppSettingSafe.XmlAttributes.Value">
            <summary>
            Add element
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingSafe.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingSafe.#ctor(Genesys.Extras.Collections.KeyValuePairString)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingSafe.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Configuration.AppSettingSafe.ToString">
            <summary>
            Returns key as string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Configuration.ApplicationTypes">
            <summary>
            Types of applications that can consume a configuration file
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ApplicationTypes.Web">
            <summary>
            Http request/response type application
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ApplicationTypes.Native">
            <summary>
            Native application, mobile, desktop, service, etc.
            </summary>
        </member>
        <member name="T:Genesys.Extras.Configuration.FrameworkTypes">
            <summary>
            Types of .NET Framework that can consume a configuration file
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.FrameworkTypes.Full">
            <summary>
            Http request/response type application
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.FrameworkTypes.Core">
            <summary>
            Native application, mobile, desktop, service, etc.
            </summary>
        </member>
        <member name="T:Genesys.Extras.Configuration.ConfigurationManagerSafe">
            <summary>
            Cross-platform emulator of System.Configuration.ConfigurationManager, for local .config files
            Target Projects: Universal Windows 10/8.1, Xamarin Forms, Windows Phone, Portable Class Library
            Usage: From the Application project, 1. Read .config XML from filesystem, 2. Pass xml into constructor as strings
                var localFolder = Windows.ApplicationModel.Package.Current.InstalledLocation;
                localFolder = await localFolder.GetFolderAsync("App_Data");
                var appSettingsFile = await localFolder.GetFileAsync("AppSettings.config");
                var appSettingsXml = await Windows.Storage.FileIO.ReadTextAsync(appSettingsFile);
                var connectStringsFile = await localFolder.GetFileAsync("ConnectionStrings.config");
                var connectStringsXml = await Windows.Storage.FileIO.ReadTextAsync(connectStringsFile);
                var configManager = new ConfigurationManagerSafe(appSettingsXml, connectStringsXml);
            </summary>
        </member>
        <member name="T:Genesys.Extras.Configuration.ConfigurationManagerSafe.FileNames">
            <summary>
            Friendly names of common configuration filenames
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConfigurationManagerSafe.FileNames.WebConfig">
            <summary>
            ConfigFileWeb
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConfigurationManagerSafe.FileNames.AppConfig">
            <summary>
            ConfigFileNative
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConfigurationManagerSafe.FileNames.AppSettingsConfig">
            <summary>
            Config file containing application settings
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConfigurationManagerSafe.FileNames.ConnectionStringsConfig">
            <summary>
            Config file containing connection strings
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConfigurationManagerSafe.FileNames.WebJson">
            <summary>
            ConfigFileWeb
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConfigurationManagerSafe.FileNames.AppJson">
            <summary>
            ConfigFileNative
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConfigurationManagerSafe.FileNames.AppSettingsJson">
            <summary>
            Config file containing application settings
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConfigurationManagerSafe.FileNames.ConnectionStringsJson">
            <summary>
            Config file containing connection strings
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConfigurationManagerSafe.ApplicationType">
            <summary>
            ApplicationType
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConfigurationManagerSafe.FrameworkType">
            <summary>
            FrameworkType
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConfigurationManagerSafe.RootFullPath">
            <summary>
            FrameworkType
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConfigurationManagerSafe.AppSettingsFullPath">
            <summary>
            FrameworkType
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConfigurationManagerSafe.ConnectionStringsFullPath">
            <summary>
            FrameworkType
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConfigurationManagerSafe.RootFolder">
            <summary>
            Full path to the App_Data folder, or the current OS equivilent
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConfigurationManagerSafe.AppDataFolder">
            <summary>
            Full path to the App_Data folder, or the current OS equivilent
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConfigurationManagerSafe.AppSettings">
            <summary>
            All application settings in the referenced config file
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConfigurationManagerSafe.ConnectionStrings">
            <summary>
            All connection strings in the referenced config file
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConfigurationManagerSafe.ThrowException">
            <summary>
            ThrowException
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConfigurationManagerSafe.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConfigurationManagerSafe.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConfigurationManagerSafe.#ctor(System.Xml.Linq.XDocument,System.String,System.Xml.Linq.XDocument,System.String)">
            <summary>
            Constructor that accepts AppSettings and ConnectionStrings XML data in string form
            Usage: From the Application project, 1. Read .config XML from filesystem, 2. Pass xml into constructor as strings
             - Desktop and UWP:
                var localFolder = Windows.ApplicationModel.Package.Current.InstalledLocation;
                localFolder = await localFolder.GetFolderAsync("App_Data");
                var appSettingsFile = await localFolder.GetFileAsync("AppSettings.config");
                var connectStringsFile = await localFolder.GetFileAsync("ConnectionStrings.config");
                var configManager = new ConfigurationManagerSafe(appSettingsXml, connectStringsXml);
             - UWP:
                var appSettingsXml = await Windows.Storage.FileIO.ReadTextAsync(appSettingsFile);        
                var connectStringsXml = await Windows.Storage.FileIO.ReadTextAsync(connectStringsFile);
             - .NET 4.x Full/Heavy:
                var configManager = new ConfigurationManagerSafe(System.Configuration.ConfigurationManager.AppSettings, 
                                                            System.Configuration.ConfigurationManager.ConnectionStrings);
            </summary>
            <param name="appSettings">Raw XML from AppSettings.config</param>
            <param name="appSettingsPathFile">Path\File containing AppSettings</param>
            <param name="connectionStrings">Raw XML from ConnectionStrings.config</param>
            <param name="connectionStringsPathFile">Path\File containing ConnectionStrings</param>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConfigurationManagerSafe.#ctor(System.IO.Stream,System.String)">
            <summary>
            Constructor that accepts Stream, for .NET Core/PCL/Universal apps
            </summary>
            <param name="configContents">Raw XML from Web.config, AppSettings.config and ConnectionStrings.config</param>
            <param name="configPathFile">File containing app settings and connection strings</param>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConfigurationManagerSafe.#ctor(System.String[0:,0:],System.String[0:,0:])">
            <summary>
            Constructor that accepts AppSettings and ConnectionStrings XML data in array form
            This method is to support ConfigurationManagerFull() construction
            </summary>
            <param name="appSettings">ConfigurationManager.AppSettings.ToArraySafe()</param>
            <param name="connectionStrings">ConfigurationManager.ConnectionStrings.ToArraySafe()</param>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConfigurationManagerSafe.AppSetting(System.String)">
            <summary>
            Allows for return of setting when instantiated
            </summary>
            <param name="key">Key of app setting to retrieve</param>
            <returns>App setting that matches the key</returns>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConfigurationManagerSafe.AppSettingValue(System.String)">
            <summary>
            Allows for return of setting when instantiated
            </summary>
            <param name="key">Key of item to retrieve the value</param>
            <returns>Value contents</returns>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConfigurationManagerSafe.ConnectionString(System.String)">
            <summary>
            Allows for return of setting when instantiated
            </summary>
            <param name="key">Key of item to retrieve the value</param>
            <returns>Value contents</returns>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConfigurationManagerSafe.ConnectionStringValue(System.String)">
            <summary>
            Allows for return of setting when instantiated
            </summary>
            <param name="key">Key of item to retrieve the value</param>
            <returns>Value contents</returns>
        </member>
        <member name="T:Genesys.Extras.Configuration.ConnectionStringList">
            <summary>
            Generic list of connection strings
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringList.ElementName">
            <summary>
            Name of the Xml node element
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringList.ElementKeyName">
            <summary>
            Name of the attribute key inside Xml node
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringList.ElementValueName">
            <summary>
            Name of the attribute value inside Xml node
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringList.ConfigFile">
            <summary>
            File that contains these configurations
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringList.RawXml">
            <summary>
            Raw XML document
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringList.StatusMessage">
            <summary>
            StatusMessage
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringList.AllowDuplicates">
            <summary>
                 AllowDuplicates
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringList.ThrowException">
            <summary>
            ThrowException
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringList.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringList.#ctor(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="xmlRaw"></param>
            <param name="configFile"></param>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringList.Load">
            <summary>
            Loads all values from configuration file
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringList.GetValue(Genesys.Extras.Text.StringMutable)">
            <summary>
            Gets value for a key
            </summary>
            <param name="key">Key of the element</param>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringList.FindIndex(Genesys.Extras.Text.StringMutable)">
            <summary>
            Finds the index
            </summary>
            <param name="key"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringList.Add(Genesys.Extras.Configuration.ConnectionStringSafe)">
            <summary>
            Adds float item, maintaining identity key
            </summary>
            <param name="itemToAdd"></param>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringList.Add(Genesys.Extras.Text.StringMutable,Genesys.Extras.Text.StringMutable)">
            <summary>
            Normalizes and Adds a new member to the list
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringList.Remove(Genesys.Extras.Text.StringMutable)">
            <summary>
            Remove a member from the list
            </summary>
            <param name="key"></param>
            <remarks></remarks>
        </member>
        <member name="T:Genesys.Extras.Configuration.ConnectionStringSafe">
            <summary>
            Container class for connection strings
            </summary>
        </member>
        <member name="T:Genesys.Extras.Configuration.ConnectionStringSafe.XmlElements">
            <summary>
            Element names
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.XmlElements.ConnectionStrings">
            <summary>
            appSettings element
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.XmlElements.Add">
            <summary>
            Add element
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.XmlElements.Clear">
            <summary>
            Clear element
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.XmlElements.Remove">
            <summary>
            Remove element
            </summary>
        </member>
        <member name="T:Genesys.Extras.Configuration.ConnectionStringSafe.XmlAttributes">
            <summary>
            Element names
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.XmlAttributes.Key">
            <summary>
            appSettings element
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.XmlAttributes.Value">
            <summary>
            Add element
            </summary>
        </member>
        <member name="T:Genesys.Extras.Configuration.ConnectionStringSafe.ConnectionStringTypes">
            <summary>
            Types of apps that can consume a .config file
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.ConnectionStringTypes.Empty">
            <summary>
            Empty
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.ConnectionStringTypes.ADO">
            <summary>
            ADO Data access
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.ConnectionStringTypes.EF">
            <summary>
            Entity Framework data access
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.ConnectionStringTypes.Invalid">
            <summary>
            Invalid string
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.maskSQLExpress">
            <summary>
            Mask of EF connection string
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.maskEF">
            <summary>
            Mask of EF connection string
            </summary>
        </member>
        <member name="F:Genesys.Extras.Configuration.ConnectionStringSafe.maskADO">
            <summary>
            Mask of EF connection string
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringSafe.EDMXFileName">
            <summary>
            EDMXFileName
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringSafe.ConnectionStringType">
            <summary>
            Determines type of connection string: ADO or EF
            </summary>
            <returns></returns>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringSafe.Key">
            <summary>
            key of this pair
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringSafe.Value">
            <summary>
            Value of this pair
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringSafe.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringSafe.#ctor(Genesys.Extras.Collections.KeyValuePairString)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringSafe.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <remarks></remarks>
        </member>
        <member name="E:Genesys.Extras.Configuration.ConnectionStringSafe.PropertyChanged">
            <summary>
            Property changed event handler for INotifyPropertyChanged
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringSafe.OnPropertyChanged(System.String)">
            <summary>
            Property changed event for INotifyPropertyChanged
            </summary>
            <param name="propertyName">String name of property</param>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringSafe.SetField``1(``0@,``0,System.String)">
            <summary>
            Sets the property data as well as fired OnPropertyChanged() for INotifyPropertyChanged
            </summary>
            <typeparam name="TField"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringSafe.ConnectionStringValueChanged">
            <summary>
            Determine time and validity of new conneciton string data
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringSafe.IsADO">
            <summary>
            Is an ADO connection string?
            </summary>
            <returns></returns>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringSafe.IsEF">
            <summary>
            Is an EF connection string?
            </summary>
            <returns>True if this is an ADO connection string</returns>
        </member>
        <member name="P:Genesys.Extras.Configuration.ConnectionStringSafe.IsValid">
            <summary>
            Tests the connection string to see if is valid
             Does not test the database existence. Only string keywords
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringSafe.ToString">
            <summary>
            returns currently loaded connection string
            </summary>
            <returns>Connection string in default (current value) format, not converted.</returns>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringSafe.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats data according to requesting format
            For returning ADO-style connection string from EF format: Assumes "provider connection string=" is the last key in the "connectionString=" value
            </summary>
            <param name="format">G (as-is), EF (EF format), ADO (ADO format)</param>
            <param name="formatProvider">ICustomFormatter compatible class</param>
            <returns>Name field formatted in common combinations (EF, ADO)</returns>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringSafe.ToEF(System.Type)">
            <summary>
            Converts from ADO or EF raw connection strings to EF format
            </summary>
            <param name="dataAccessObject">Defines {namespace}.edmx EF connection string configuration. Namespace string generated from: dataAccessObject.GetTypeInfo().Namespace.Replace(".", TypeExtension.DefaultString)</param>
            <returns>{namespace}.edmx connection string configuration based on Type dataAccessObject's namespace. </returns>
        </member>
        <member name="M:Genesys.Extras.Configuration.ConnectionStringSafe.ToADO">
            <summary>
            Converts from EF or ADO raw connection strings to ADO format
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Configuration.IConfigurationManager">
            <summary>
            Cross-platform emulator of System.Configuration.ConfigurationManager, for local .config files
            Target Projects: Universal Windows 10/8.1, Xamarin Forms, Windows Phone, Portable Class Library
            Usage: From the Application project, 1. Read .config XML from filesystem, 2. Pass xml into constructor as strings
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.IConfigurationManager.AppSettings">
            <summary>
            All application settings in the referenced config file
            </summary>
        </member>
        <member name="P:Genesys.Extras.Configuration.IConfigurationManager.ConnectionStrings">
            <summary>
            All connection strings in the referenced config file
            </summary>
        </member>
        <member name="M:Genesys.Extras.Configuration.IConfigurationManager.AppSetting(System.String)">
            <summary>
            Allows for return of setting when instantiated
            </summary>
            <param name="key">Key of app setting to retrieve</param>
            <returns>App setting that matches the key</returns>
        </member>
        <member name="M:Genesys.Extras.Configuration.IConfigurationManager.AppSettingValue(System.String)">
            <summary>
            Allows for return of setting when instantiated
            </summary>
            <param name="key">Key of item to retrieve the value</param>
            <returns>Value contents</returns>
        </member>
        <member name="M:Genesys.Extras.Configuration.IConfigurationManager.ConnectionString(System.String)">
            <summary>
            Allows for return of setting when instantiated
            </summary>
            <param name="key">Key of item to retrieve the value</param>
            <returns>Value contents</returns>
        </member>
        <member name="M:Genesys.Extras.Configuration.IConfigurationManager.ConnectionStringValue(System.String)">
            <summary>
            Allows for return of setting when instantiated
            </summary>
            <param name="key">Key of item to retrieve the value</param>
            <returns>Value contents</returns>
        </member>
        <member name="T:Genesys.Extras.Data.ColumnPrefix">
            <summary>
            Class attribute decoration that holds the ColumnPrefix 
            If not specified, will be: var ColumnPrefix = typeof(Class).Name
            </summary>    
        </member>
        <member name="P:Genesys.Extras.Data.ColumnPrefix.Value">
            <summary>
            Name supplied by attribute. 
            Default is DefaultConnection
            </summary>
        </member>
        <member name="M:Genesys.Extras.Data.ColumnPrefix.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ColumnPrefix">Database schema name</param>
        </member>
        <member name="T:Genesys.Extras.Data.ConnectionStringName">
            <summary>
            Class attribute decoration that holds the ConnectionStringName 
            Name is the key used to lookup connection string from config file.
            </summary>    
        </member>
        <member name="F:Genesys.Extras.Data.ConnectionStringName.DefaultConnectionName">
            <summary>
            Default database connection string name
            </summary>
        </member>
        <member name="P:Genesys.Extras.Data.ConnectionStringName.Value">
            <summary>
            Name supplied by attribute.
            Default is DefaultConnection
            </summary>
        </member>
        <member name="M:Genesys.Extras.Data.ConnectionStringName.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="connectionString">Connection string name</param>
        </member>
        <member name="T:Genesys.Extras.Data.DataAccessBehaviors">
            <summary>
            enumeration to allow the attribute to use strongly-typed Id
            </summary>
        </member>
        <member name="F:Genesys.Extras.Data.DataAccessBehaviors.AllAccess">
            <summary>
            All Select, Insert, Update and Delete functionality
            </summary>
        </member>
        <member name="F:Genesys.Extras.Data.DataAccessBehaviors.InsertOnly">
            <summary>
            Insert functionality
            </summary>
        </member>
        <member name="F:Genesys.Extras.Data.DataAccessBehaviors.SelectOnly">
            <summary>
            Select functionality
            </summary>
        </member>
        <member name="F:Genesys.Extras.Data.DataAccessBehaviors.NoUpdate">
            <summary>
            Select, Insert and Delete functionality
            </summary>
        </member>
        <member name="T:Genesys.Extras.Data.DataAccessBehavior">
            <summary>
            Connection string Attribute
            </summary>
        </member>
        <member name="P:Genesys.Extras.Data.DataAccessBehavior.Value">
            <summary>
            Value of attribute
            </summary>
        </member>
        <member name="M:Genesys.Extras.Data.DataAccessBehavior.#ctor(Genesys.Extras.Data.DataAccessBehaviors)">
            <summary>
            Constructor
            </summary>
            <param name="value">Value to hydrate</param>
        </member>
        <member name="T:Genesys.Extras.Data.DatabaseSchemaName">
            <summary>
            Class attribute decoration that holds the DatabaseSchemaName 
            Name is the key used to lookup connection string from config file.
            </summary>    
        </member>
        <member name="F:Genesys.Extras.Data.DatabaseSchemaName.DefaultDatabaseSchema">
            <summary>
            Default Code Schema name
            </summary>
        </member>
        <member name="F:Genesys.Extras.Data.DatabaseSchemaName.DefaultActivitySchema">
            <summary>
            Default Activity Schema name
            </summary>
        </member>
        <member name="P:Genesys.Extras.Data.DatabaseSchemaName.Value">
            <summary>
            Name supplied by attribute. 
            Default is DefaultConnection
            </summary>
        </member>
        <member name="M:Genesys.Extras.Data.DatabaseSchemaName.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="databaseSchema">Database schema name</param>
        </member>
        <member name="T:Genesys.Extras.Data.DataConcurrencies">
            <summary>
            enumeration to allow the attribute to use strongly-typed Id
            </summary>    
        </member>
        <member name="F:Genesys.Extras.Data.DataConcurrencies.Automatic">
            <summary>
            When Autonmatic, Optimistic will be used in Select operations, Pessimistic will be used for Insert/Update/Delete
            </summary>
        </member>
        <member name="F:Genesys.Extras.Data.DataConcurrencies.Pessimistic">
            <summary>
            Forces clean read of committed data, will not read uncommitted data
            Will wait for commits to finish, can be blocked
            This entity will re-pull itself from the database after a save, insert then fully reselect to ensure data integrity
            </summary>
        </member>
        <member name="F:Genesys.Extras.Data.DataConcurrencies.Optimistic">
            <summary>
            allows dirty reads of uncommitted data
            Can not be blocked by other processes commits
            This entity will not re-pull itself from the database after a save call.
            After a save, any data changes in the data tier will not be reflected in the object
            </summary>
        </member>
        <member name="T:Genesys.Extras.Data.DataConcurrency">
            <summary>
            Connection string Attribute
            </summary>
        </member>
        <member name="P:Genesys.Extras.Data.DataConcurrency.Value">
            <summary>
            Value of attribute
            </summary>
        </member>
        <member name="M:Genesys.Extras.Data.DataConcurrency.#ctor(Genesys.Extras.Data.DataConcurrencies)">
            <summary>
            Constructor
            </summary>
            <param name="value">Value to hydrate</param>
        </member>
        <member name="T:Genesys.Extras.Data.Fields">
            <summary>
            enumeration to allow the attribute to use strongly-typed Id
            </summary>    
        </member>
        <member name="F:Genesys.Extras.Data.Fields.None">
            <summary>
            Value object: Record has no single identity field
            </summary>
        </member>
        <member name="F:Genesys.Extras.Data.Fields.IdOrKey">
            <summary>
            Either Id or Key drives record identity
            </summary>
        </member>
        <member name="F:Genesys.Extras.Data.Fields.Id">
            <summary>
            Id fields defines identity
            </summary>
        </member>
        <member name="F:Genesys.Extras.Data.Fields.Key">
            <summary>
            Key field defines identity
            </summary>
        </member>
        <member name="T:Genesys.Extras.Data.RecordIdentity">
            <summary>
            Connection string Attribute
            </summary>
        </member>
        <member name="P:Genesys.Extras.Data.RecordIdentity.Value">
            <summary>
            Value of attribute
            </summary>
        </member>
        <member name="M:Genesys.Extras.Data.RecordIdentity.#ctor(Genesys.Extras.Data.Fields)">
            <summary>
            Constructor
            </summary>
            <param name="value">Value to hydrate</param>
        </member>
        <member name="T:Genesys.Extras.Data.TableName">
            <summary>
            Class attribute decoration that holds the TableName 
            If not specified, will be: var tableName = typeof(Class).Name
            </summary>    
        </member>
        <member name="P:Genesys.Extras.Data.TableName.Value">
            <summary>
            Name supplied by attribute. 
            Default is DefaultConnection
            </summary>
        </member>
        <member name="M:Genesys.Extras.Data.TableName.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="tableName">Database schema name</param>
        </member>
        <member name="T:Genesys.Extras.Data.TakeRows">
            <summary>
            Take Top Rows Attribute
             Default: 100 rows
            </summary>
        </member>
        <member name="P:Genesys.Extras.Data.TakeRows.Value">
            <summary>
            Value of attribute
            </summary>
        </member>
        <member name="M:Genesys.Extras.Data.TakeRows.#ctor(System.Int32)">
            <summary>
            Number of rows to take top from query
             Default: 100 rows
            </summary>
            <param name="value">number of rows to take</param>
        </member>
        <member name="T:Genesys.Extras.Mathematics.AspectRatio">
            <summary>
            MathHelper - Read Only Collection
            </summary>
        </member>
        <member name="M:Genesys.Extras.Mathematics.AspectRatio.WidthChange(Genesys.Extras.Mathematics.Square,System.Int32)">
            <summary>
            Gets new width for changing height
            </summary>
            <param name="original">Original square</param>
            <param name="newHeight">New height</param>
            <returns>Width given original item was resized</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.AspectRatio.HeightChange(Genesys.Extras.Mathematics.Square,System.Int32)">
            <summary>
            Gets new width for changing height
            </summary>
            <param name="original">Original square</param>
            <param name="newWidth">New width</param>
            <returns>Width given original item was resized</returns>
        </member>
        <member name="T:Genesys.Extras.Mathematics.Square">
            <summary>
            Square class
            </summary>
        </member>
        <member name="P:Genesys.Extras.Mathematics.Square.Width">
            <summary>
            Width of the square
            </summary>
        </member>
        <member name="P:Genesys.Extras.Mathematics.Square.Height">
            <summary>
            Height of the square
            </summary>
        </member>
        <member name="T:Genesys.Extras.Mathematics.Age">
            <summary>
            Calculates age in days and years
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Age.#ctor(System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="dateToAge">Date that will be used to calculate age</param>
        </member>
        <member name="P:Genesys.Extras.Mathematics.Age.Years">
            <summary>
            Age in years
            </summary>
        </member>
        <member name="P:Genesys.Extras.Mathematics.Age.Days">
            <summary>
            Age in days
            </summary>
        </member>
        <member name="T:Genesys.Extras.Mathematics.Arithmetic">
            <summary>
            MathHelper - Read Only Collection
            </summary>
        </member>
        <member name="P:Genesys.Extras.Mathematics.Arithmetic.RandomGenerator">
            <summary>
            Singleton for random number generator
            </summary>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.Addition(System.Decimal,System.Decimal)">
            <summary>
            Addition
            </summary>
            <param name="addend1">Addend 1</param>
            <param name="addend2">Addend 2</param>
            <returns>Sun of addends</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.Subtraction(System.Decimal,System.Decimal)">
            <summary>
            Subtraction
            </summary>
            <param name="minued">Minued to be subtracted</param>
            <param name="subtrahend">Subtrahend to subtract</param>
            <returns>Difference of values</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.Multiply(System.Decimal,System.Decimal)">
            <summary>
            Multiplication
            </summary>
            <param name="multiplicand">Multiplicand to multiply</param>
            <param name="multiplier">Multiplier to multiply</param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.Divide(System.Int32,System.Int32)">
            <summary>
            Division
            </summary>
            <param name="dividend">Dividend to be divided</param>
            <param name="divisor">Divisor to divide</param>
            <returns>Divided result</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.Divide(System.Decimal,System.Decimal)">
            <summary>
            Division
            </summary>
            <param name="dividend">Dividend to be divided</param>
            <param name="divisor">Divisor to divide</param>
            <returns>Divided result</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.AverageDecimal(System.Collections.Generic.List{System.Decimal})">
            <summary>
            Averages a decimal list
            </summary>
            <param name="lineItems">Items to average</param>
            <returns>Divided result</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.ROI(System.Decimal,System.Decimal)">
            <summary>
            Calculates ROI
            </summary>
            <param name="currentValue">Current total</param>
            <param name="totalInvested">Total invested</param>
            <returns>Return on investment percentage</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.Random(System.Int32)">
            <summary>
            Generates a random value with the given length
            </summary>
            <param name="digits">Number of digits to be returned. Only values between 1 and 10 will be accepted</param>
            <returns>Random number</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.Random(System.Int32,System.Int32)">
            <summary>
            Generates a random string with the given length
            </summary>
            <param name="minValue">Floor used for random</param>
            <param name="maxValue">Ceiling used for random</param>
            <returns>Random integer value</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.GCD(System.Int32,System.Int32)">
            <summary>
            Gets Greatest Common Divisor of three numbers
            </summary>
            <param name="num1">First to get GCD</param>
            <param name="num2">Second to get GCD</param>
            <returns>Greatest common denominator</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.LCM(System.Int32,System.Int32)">
            <summary>
            Gets Leas Common Multiplier
            </summary>
            <param name="num1">First to get LCD</param>
            <param name="num2">Second to get LCD</param>
            <returns>Least common denominator</returns>
        </member>
        <member name="M:Genesys.Extras.Mathematics.Arithmetic.WidthGet(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets new width for changing height
            </summary>
            <param name="originalWidth">Original items width</param>
            <param name="originanHeight">Original items heigth</param>
            <param name="newHeight">New height</param>
            <returns>Width given original item was resized</returns>
        </member>
        <member name="T:Genesys.Extras.Media.RGBByteInfo">
            <summary>
            Color info in RGB converted format
            </summary>
        </member>
        <member name="P:Genesys.Extras.Media.RGBByteInfo.Alpha">
            <summary>
            Alpha channel (transparency)
            </summary>
        </member>
        <member name="P:Genesys.Extras.Media.RGBByteInfo.Blue">
            <summary>
            Blue channel
            </summary>
        </member>
        <member name="P:Genesys.Extras.Media.RGBByteInfo.Green">
            <summary>
            Green channel
            </summary>
        </member>
        <member name="P:Genesys.Extras.Media.RGBByteInfo.Red">
            <summary>
            Red channel
            </summary>
        </member>
        <member name="M:Genesys.Extras.Media.RGBByteInfo.ToHex">
            <summary>
            Converts RGB to Hex #RRGGBB
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Media.RGBByteInfo.ToRGBString">
            <summary>
            Converts RGB to RGB(RR,GG,BB)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Media.RGBStandardInfo">
            <summary>
            Color info in RGB converted format
            </summary>
        </member>
        <member name="P:Genesys.Extras.Media.RGBStandardInfo.Alpha">
            <summary>
            Alpha channel (transparency)
            </summary>
        </member>
        <member name="P:Genesys.Extras.Media.RGBStandardInfo.Blue">
            <summary>
            Blue channel
            </summary>
        </member>
        <member name="P:Genesys.Extras.Media.RGBStandardInfo.Green">
            <summary>
            Green channel
            </summary>
        </member>
        <member name="P:Genesys.Extras.Media.RGBStandardInfo.Red">
            <summary>
            Red channel
            </summary>
        </member>
        <member name="M:Genesys.Extras.Media.RGBStandardInfo.Inverse">
            <summary>
            Inverses the current RGB values
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Net.HttpClientBuilder">
            <summary>
            Builds an HttpClient object
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Genesys.Extras.Net.HttpClientBuilder.MaxResponseContentBufferSizeDefault">
            <summary>
            MaxResponseContentBufferSize
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpClientBuilder.UserAgentDefault">
            <summary>
            Default user agent string
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpClientBuilder.#ctor">
            <summary>
            Constructor parameterless
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpClientBuilder.#ctor(System.Int64,System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Builds a HttpClient with specific content buffer size and request header
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpClientBuilder.#ctor(System.Int64,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Builds a HttpClient with specific content buffer size and request header
            </summary>
        </member>
        <member name="T:Genesys.Extras.Net.HttpRequestClient">
            <summary>
            Communicates via GET, all transmissions String
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestClient.DataReceivedRaw">
            <summary>
            Raw data received
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestClient.DataReceivedDecrypted">
            <summary>
            DataReceivedRaw value decrypted
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestClient.Client">
            <summary>
            HttpClient for request
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestClient.Response">
            <summary>
            Response after request
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestClient.CompletionOption">
            <summary>
            Sets the HttpResponse completion option.
             Default - Reading response header and content: HttpCompletionOption.ResponseContentRead
             For reading response header, no content (i.e. Large files): HttpCompletionOption.ResponseHeadersRead
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestClient.Url">
            <summary>
            Url of request
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestClient.SendPlainText">
            <summary>
            Specify if want to send plain text with no alterations
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestClient.ThrowExceptionWithEmptyReponse">
            <summary>
            Specify if want to send plain text with no alterations
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestClient.Encryptor">
            <summary>
            Encryptor if plain text is off
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.#ctor">
            <summary>
            Immutable
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.#ctor(System.Uri)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.#ctor(System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.#ctor(System.Uri,Genesys.Extras.Security.Cryptography.IEncryptor)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Constructor that formats the entire URL, complete with PROTOCOL://SERVER_NAME:PORT/APPLICATION_PATH
            No trailing slash.
            </summary>
            <param name="protocol">Protocol for Url. I.e. http</param>
            <param name="serverName">Server name for Url. I.e. www.YourDomain.com</param>
            <param name="port">Port for Url. I.e. 80</param>
            <param name="applicationPath">Application path for Url. I.e. /Home/Index</param>
            <returns>Constructed url</returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.#ctor(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Constructor that formats the entire URL, complete with PROTOCOL://SERVER_NAME:PORT/APPLICATION_PATH?Param1=Value1
            </summary>
            <param name="urlNoQuerystring">Url with everything but parameters and punctuation</param>
            <param name="parametersAndValues">Collection of parameters to add to Url</param>
            <returns>Constructed url</returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructor that formats the entire URL, complete with PROTOCOL://SERVER_NAME:PORT/APPLICATION_PATH/Parameter1/Parameter2/.../ParameterN/
            </summary>
            <param name="urlNoQuerystring">Url with everything but parameters and punctuation</param>
            <param name="parametersAndValues">Collection of parameters to add to Url</param>
            <returns>Constructed url</returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.Send">
            <summary>
            Synchronously sends a GET request, Receives string response
            </summary>
            <returns>Result</returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.SendAsync">
            <summary>
            Asynchronously sends a GET request, Receives strongly typed response
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.ToString">
            <summary>
            string format of the request Url
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.Dispose">
            <summary>
            Dispose this object
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestClient.Dispose(System.Boolean)">
            <summary>
            Inheritance disposal
            </summary>
            <param name="disposing">Disposing state flag</param>
        </member>
        <member name="T:Genesys.Extras.Net.HttpRequestDelete">
            <summary>
            Communicates via DELETE, all transmissions String
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestDelete.#ctor">
            <summary>
            Immutable
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestDelete.#ctor(System.Uri)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestDelete.#ctor(System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestDelete.#ctor(System.Uri,Genesys.Extras.Security.Cryptography.IEncryptor)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestDelete.Send">
            <summary>
            Synchronously sends a GET request, Receives string response
            Warning: Not thread safe, particularly in Web-based UIs. This is a stopgap to allow legacy code to operate with blocking/deadlock risk.
            </summary>
            <returns>Result</returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestDelete.SendAsync">
            <summary>
            Asynchronously sends a GET request, Receives strongly typed response
            </summary>
            <returns>Response data</returns>
        </member>
        <member name="T:Genesys.Extras.Net.HttpRequestGet`1">
            <summary>
            Communicates via GET, strongly typed
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestGet`1.DataReceivedDeserialized">
            <summary>
            DataReceivedRaw value decrypted
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestGet`1.Deserializer">
            <summary>
            De-serializer of response
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestGet`1.KnownTypes">
            <summary>
            KnownTypes assist the serializer with types that cannot be mapped by default
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGet`1.#ctor(System.Uri)">
            <summary>
            Immutable
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGet`1.#ctor(System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGet`1.#ctor(System.Uri,Genesys.Extras.Serialization.ISerializer{`0})">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGet`1.#ctor(System.Uri,Genesys.Extras.Security.Cryptography.IEncryptor)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGet`1.Send">
            <summary>
            Sync send and Receive
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGet`1.SendAsync">
            <summary>
            Async send and Receive
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Net.HttpRequestGetString">
            <summary>
            Communicates via GET, all transmissions String
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGetString.#ctor">
            <summary>
            Immutable
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGetString.#ctor(System.Uri)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGetString.#ctor(System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGetString.#ctor(System.Uri,Genesys.Extras.Security.Cryptography.IEncryptor)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGetString.Send">
            <summary>
            Synchronously sends a GET request, Receives string response
            Warning: Not thread safe, particularly in Web-based UIs. This is a stopgap to allow legacy code to operate with blocking/deadlock risk.
            </summary>
            <returns>Result</returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestGetString.SendAsync">
            <summary>
            Asynchronously sends a GET request, Receives strongly typed response
            </summary>
            <returns>Response data</returns>
        </member>
        <member name="T:Genesys.Extras.Net.HttpRequestPost`2">
            <summary>
            Communicates via POST, sending data via HttpContent
            </summary>
            <typeparam name="TDataIn">The type of data to be sent in request</typeparam>
            <typeparam name="TDataOut">The type of data which will be received in response</typeparam>
        </member>
        <member name="F:Genesys.Extras.Net.HttpRequestPost`2.dataToSendStrong">
            <summary>
            Data to send, initialized with default()
            </summary>
        </member>
        <member name="F:Genesys.Extras.Net.HttpRequestPost`2.dataReceivedStrong">
            <summary>
            Data to send, initialized with default()
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestPost`2.Serializer">
            <summary>
            Serializes data going to the endpoint
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestPost`2.Deserializer">
            <summary>
            Serializes data going to the endpoint
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestPost`2.KnownTypes">
            <summary>
            KnownTypes assist the serializer with types that cannot be mapped by default
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`2.#ctor(System.Uri)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`2.#ctor(System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`2.#ctor(System.Uri,`0)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`2.#ctor(System.Uri,`0,Genesys.Extras.Security.Cryptography.IEncryptor)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`2.#ctor(System.Uri,`0,System.Collections.Generic.List{System.Type})">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`2.Send">
            <summary>
            Instantiates and transmits all data to the middle tier web service that will execute the workflow
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`2.SendAsync">
            <summary>
            Instantiates and transmits all data to the middle tier web service that will execute the workflow
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Net.HttpRequestPost`1">
            <summary>
            Communicates via POST, sending data via HttpContent
            This class is for cases where type being sent, and type being receieved is the same type
            </summary>
            <typeparam name="TDataInOut">The type of data to be sent in request and which will be received in response</typeparam>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`1.#ctor(System.Uri)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`1.#ctor(System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`1.#ctor(System.Uri,`0)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`1.#ctor(System.Uri,`0,Genesys.Extras.Security.Cryptography.IEncryptor)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPost`1.#ctor(System.Uri,`0,System.Collections.Generic.List{System.Type})">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="T:Genesys.Extras.Net.HttpRequestPostString">
            <summary>
            Communicates via POST, string in and string out
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestPostString.DataToSend">
            <summary>
            DataToSend
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestPostString.ContentType">
            <summary>
            Mime content type of data to send
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPostString.#ctor(System.Uri)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPostString.#ctor(System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPostString.#ctor(System.Uri,System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPostString.#ctor(System.Uri,System.String,Genesys.Extras.Security.Cryptography.IEncryptor)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPostString.Send">
            <summary>
            Sends a GET request, Receives string response
                Overrides HttpRequestBase.Send()
            Warning: Not thread safe, particularly in Web-based UIs. This is a stopgap to allow legacy code to operate with blocking/deadlock risk.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPostString.SendAsync">
            <summary>
            Sends a GET request, Receives string response
                Overrides HttpRequestBase.SendAsync()
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Net.HttpRequestPut`2">
            <summary>
            Communicates via PUT, sending data via HttpContent
            </summary>
            <typeparam name="TDataIn">The type of data to be sent in request</typeparam>
            <typeparam name="TDataOut">The type of data which will be received in response</typeparam>
        </member>
        <member name="F:Genesys.Extras.Net.HttpRequestPut`2.dataToSendStrong">
            <summary>
            Data to send, initialized with default()
            </summary>
        </member>
        <member name="F:Genesys.Extras.Net.HttpRequestPut`2.dataReceivedStrong">
            <summary>
            Data to send, initialized with default()
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestPut`2.Serializer">
            <summary>
            Serializes data going to the endpoint
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestPut`2.Deserializer">
            <summary>
            Serializes data going to the endpoint
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestPut`2.KnownTypes">
            <summary>
            KnownTypes assist the serializer with types that cannot be mapped by default
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`2.#ctor(System.Uri)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`2.#ctor(System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`2.#ctor(System.Uri,`0)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`2.#ctor(System.Uri,`0,Genesys.Extras.Security.Cryptography.IEncryptor)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`2.#ctor(System.Uri,`0,System.Collections.Generic.List{System.Type})">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`2.Send">
            <summary>
            Instantiates and transmits all data to the middle tier web service that will execute the workflow
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`2.SendAsync">
            <summary>
            Instantiates and transmits all data to the middle tier web service that will execute the workflow
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Net.HttpRequestPut`1">
            <summary>
            Communicates via PUT, sending data via HttpContent
            </summary>
            <typeparam name="TDataInOut">The type of data to be sent in request and which will be received in response</typeparam>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`1.#ctor(System.Uri)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`1.#ctor(System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`1.#ctor(System.Uri,`0)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`1.#ctor(System.Uri,`0,Genesys.Extras.Security.Cryptography.IEncryptor)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPut`1.#ctor(System.Uri,`0,System.Collections.Generic.List{System.Type})">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="T:Genesys.Extras.Net.HttpRequestPutString">
            <summary>
            Communicates via PUT, string in and string out
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestPutString.DataToSend">
            <summary>
            DataToSend
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpRequestPutString.ContentType">
            <summary>
            Mime content type of data to send
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPutString.#ctor(System.Uri)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPutString.#ctor(System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPutString.#ctor(System.Uri,System.String)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPutString.#ctor(System.Uri,System.String,Genesys.Extras.Security.Cryptography.IEncryptor)">
            <summary>
            Construct with data
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPutString.Send">
            <summary>
            Sends a GET request, Receives string response
                Overrides HttpRequestBase.Send()
            Warning: Not thread safe, particularly in Web-based UIs. This is a stopgap to allow legacy code to operate with blocking/deadlock risk.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpRequestPutString.SendAsync">
            <summary>
            Sends a GET request, Receives string response
                Overrides HttpRequestBase.SendAsync()
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Net.HttpVerbSender">
            <summary>
            Handles sending HttpRequests to endpoints and receiving a response
            </summary>
        </member>
        <member name="T:Genesys.Extras.Net.HttpVerbSender.RequestEventArgs">
            <summary>
            Event Args for loading and binding new model data
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.HttpVerbSender.RequestEventArgs.Request">
            <summary>
            New model data
            </summary>
        </member>
        <member name="E:Genesys.Extras.Net.HttpVerbSender.SendBegin">
            <summary>
            Send is about to begin
            </summary>
        </member>
        <member name="E:Genesys.Extras.Net.HttpVerbSender.SendEnd">
            <summary>
            Send is complete
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpVerbSender.OnSendBegin(Genesys.Extras.Net.HttpRequestClient)">
            <summary>
            OnSendBegin()
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpVerbSender.OnSendEnd(Genesys.Extras.Net.HttpRequestClient)">
            <summary>
            OnSendEnd()
            </summary>
        </member>
        <member name="T:Genesys.Extras.Net.HttpVerbSender.SendBeginEventHandler">
            <summary>
            Workflow beginning. No custom to return.
            </summary>
            <param name="sender">Sender of event</param>
            <param name="e">Arguments passed to the event handler</param>
        </member>
        <member name="P:Genesys.Extras.Net.HttpVerbSender.Request">
            <summary>
            Last HttpRequest
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpVerbSender.#ctor">
            <summary>
            Parameterless constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.HttpVerbSender.SendGetAsync``1(System.Uri)">
            <summary>
            Instantiates and transmits all data to the middle tier web service that will execute the workflow
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpVerbSender.SendPostAsync``2(System.Uri,``0)">
            <summary>
            Instantiates and transmits all data to the middle tier web service that will execute the workflow
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpVerbSender.SendPostAsync``1(System.Uri,``0)">
            <summary>
            Instantiates and transmits all data to the middle tier web service that will execute the workflow
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpVerbSender.SendPutAsync``2(System.Uri,``0)">
            <summary>
            Instantiates and transmits all data to the middle tier web service that will execute the workflow
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpVerbSender.SendPutAsync``1(System.Uri,``0)">
            <summary>
            Instantiates and transmits all data to the middle tier web service that will execute the workflow
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.HttpVerbSender.SendDeleteAsync(System.Uri)">
            <summary>
            Instantiates and transmits all data to the middle tier web service that will execute the workflow
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Net.ContentType">
            <summary>
            Holds a float content type and file extension
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.ContentType.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.ContentType.Extension">
            <summary>
            Extension
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.ContentType.#ctor">
            <summary>
            Force immutability
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.ContentType.#ctor(System.String)">
            <summary>
            Constructor with data
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Genesys.Extras.Net.ContentType.#ctor(System.String,System.String)">
            <summary>
            Constructor with data
            </summary>
            <param name="name"></param>
            <param name="extension"></param>
        </member>
        <member name="T:Genesys.Extras.Net.ContentTypes">
            <summary>
            Extends Multipurpose Internet Mail Exchange (MIME) headers
            HTML content types
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Net.ContentTypes.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.ContentTypes.loadData">
            <summary>
            Loads content types into this object
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.ContentTypes.Add(System.String)">
            <summary>
            Adds new content type
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Genesys.Extras.Net.ContentTypes.Add(System.String,System.String)">
            <summary>
            Adds new content type
            </summary>
            <param name="name"></param>
            <param name="extension"></param>
        </member>
        <member name="T:Genesys.Extras.Net.UrlBuilder">
            <summary>
            Builds URLs similary to and dependent on the UriBuilder class
            Uri Layout: [scheme]://[user]:[password]@[host/authority]:[port]/[path];[params]?[querystring]#[fragment]
            </summary>
            <returns></returns>
            <remarks></remarks>    
        </member>
        <member name="T:Genesys.Extras.Net.UrlBuilder.UriMasks">
            <summary>
            [scheme]://[user]:[password]@[host/authority]:[port]/[path];[params]?[querystring]#[fragment]
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.UrlBuilder.UriMasks.Root">
            <summary>
            [root]/[path]
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.UrlBuilder.UriMasks.RootWithQuerystring">
            <summary>
            [root]/[path]?[querystring]
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.UrlBuilder.UriMasks.RootWithFragment">
            <summary>
            [root]/[path]#[fragment]
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.UrlBuilder.UriMasks.RootWithParameterBinding">
            <summary>
            [root]/[path]/param-1/.../param-n
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.UrlBuilder.UriMasks.Full">
            <summary>
            [scheme]://[user]:[password]@[host/authority]:[port]/[path];[params]?[querystring]#[fragment]
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Constructor that formats the entire URL, complete with PROTOCOL://SERVER_NAME:PORT/APPLICATION_PATH
            No trailing slash.
            </summary>
            <param name="protocol">Protocol for Url. I.e. http</param>
            <param name="serverName">Server name for Url. I.e. www.YourDomain.com</param>
            <param name="port">Port for Url. I.e. 80</param>
            <param name="applicationPath">Application path for Url. I.e. /Home/Index</param>
            <returns>Constructed url</returns>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructor that formats the entire URL, complete with PROTOCOL://SERVER_NAME:PORT/APPLICATION_PATH/Parameter1/Parameter2/.../ParameterN/
            </summary>
            <param name="urlNoQuerystring">Url with everything but parameters and punctuation</param>
            <param name="parameters">Collection of parameters to add to Url</param>
            <returns>Constructed url</returns>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.#ctor(System.String,Genesys.Extras.Collections.KeyValueListString)">
            <summary>
            Constructor that formats the entire URL, complete with PROTOCOL://SERVER_NAME:PORT/APPLICATION_PATH/Parameter1/Parameter2/.../ParameterN/
            </summary>
            <param name="urlNoQuerystring">Url with everything but parameters and punctuation</param>
            <param name="parameters">Collection of parameters to add to Url</param>
            <returns>Constructed url</returns>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.Encode(System.String)">
            <summary>
            Encodes to URL friendly
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.Decode(System.String)">
            <summary>
            Decodes to URL friendly
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.ToString">
            <summary>
            Forms url in G format, which is PROTOCOL://SERVER_NAME:PORT/APPLICATION_PATH
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Net.UrlBuilder.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats data according to requesting format
            </summary>
            <param name="format">G: PROTOCOL://SERVER_NAME:PORT/APPLICATION_PATH</param>
            <param name="formatProvider">ICustomFormatter compatible class</param>
            <returns>Key and/or Value formatted</returns>
        </member>
        <member name="T:Genesys.Extras.Net.UrlInfo">
            <summary>
            Encapsulates common Uri and Routing components
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Genesys.Extras.Net.UrlInfo.Name">
            <summary>
            DisplayName of this Url
            </summary>
        </member>
        <member name="F:Genesys.Extras.Net.UrlInfo.RootValue">
            <summary>
            RootValue
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.UrlInfo.Root">
            <summary>
            Root
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.UrlInfo.Controller">
            <summary>
            Controller
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.UrlInfo.Action">
            <summary>
            Action
            </summary>
        </member>
        <member name="P:Genesys.Extras.Net.UrlInfo.Route">
            <summary>
            Route
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.UrlInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.UrlInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.UrlInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor tuned for MVC pattern
            </summary>
        </member>
        <member name="M:Genesys.Extras.Net.UrlInfo.#ctor(System.String)">
            <summary>
            Constructor tuned for MVC pattern
            </summary>
        </member>
        <member name="T:Genesys.Extras.Security.Cryptography.CaesarEncryptor">
            <summary>
            Caesar substitution encryption
            </summary>
        </member>
        <member name="P:Genesys.Extras.Security.Cryptography.CaesarEncryptor.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Genesys.Extras.Security.Cryptography.CaesarEncryptor.Salt">
            <summary>
            Salt
            </summary>
        </member>
        <member name="P:Genesys.Extras.Security.Cryptography.CaesarEncryptor.EncodeForURL">
            <summary>
            EncodeForURL
            </summary>
        </member>
        <member name="M:Genesys.Extras.Security.Cryptography.CaesarEncryptor.#ctor">
            <summary>
            Force immutability
            </summary>
        </member>
        <member name="M:Genesys.Extras.Security.Cryptography.CaesarEncryptor.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="encryptionKey"></param>
            <param name="urlEncode"></param>
        </member>
        <member name="M:Genesys.Extras.Security.Cryptography.CaesarEncryptor.Encrypt(System.String)">
            <summary>
            Encrypts a String
            </summary>
        </member>
        <member name="M:Genesys.Extras.Security.Cryptography.CaesarEncryptor.Decrypt(System.String)">
            <summary>
            Decrypts an salted String
            </summary>
            <param name="originalString"></param>
        </member>
        <member name="M:Genesys.Extras.Security.Cryptography.CaesarEncryptor.ShiftString(System.String,System.Int16)">
            <summary>
            Perform the encryption
            </summary>
            <param name="source"></param>
            <param name="shift"></param>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Security.Cryptography.IEncryptor">
            <summary>
            Encryptor interface
            </summary>
        </member>
        <member name="P:Genesys.Extras.Security.Cryptography.IEncryptor.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Genesys.Extras.Security.Cryptography.IEncryptor.Salt">
            <summary>
            Salt
            </summary>
        </member>
        <member name="P:Genesys.Extras.Security.Cryptography.IEncryptor.EncodeForURL">
            <summary>
            EncodeForURL
            </summary>
        </member>
        <member name="M:Genesys.Extras.Security.Cryptography.IEncryptor.Encrypt(System.String)">
            <summary>
            Encrypt
            </summary>
            <param name="plainString"></param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Security.Cryptography.IEncryptor.Decrypt(System.String)">
            <summary>
            EncryptedString
            </summary>
            <param name="encryptedString"></param>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Serialization.ISerialize`1">
            <summary>
            Data access entity that can only read
            </summary>
        </member>
        <member name="M:Genesys.Extras.Serialization.ISerialize`1.Serialize">
            <summary>
            Serializes this object into a string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Serialization.ISerialize`1.Deserialize(System.String)">
            <summary>
            De-serializes a string into this object
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Serialization.ISerializer`1">
            <summary>
            Strongly typed serializer
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Genesys.Extras.Serialization.ISerializer`1.KnownTypes">
            <summary>
            List of types that allow serializer to use a type not explicitly defined. 
              Primarily used to define ISerialier Of IMyType, but pass in object of MyType 
              (serializer blows up on now knowing that MyType exists, only knows about IMyType)
            </summary>
        </member>
        <member name="P:Genesys.Extras.Serialization.ISerializer`1.ThrowException">
            <summary>
            Setting to throw exception
            </summary>
        </member>
        <member name="M:Genesys.Extras.Serialization.ISerializer`1.Serialize(`0)">
            <summary>
            Serialize
            </summary>
            <param name="objectToSerialize"></param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Serialization.ISerializer`1.Deserialize(System.String)">
            <summary>
            Deserialize
            </summary>
            <param name="stringToDeserialize"></param>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Serialization.JsonSerializer`1">
            <summary>
            JSON serialization and deserialization
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Genesys.Extras.Serialization.JsonSerializer`1.DateTimeFormatString">
            <summary>
            Gets or sets a DateTimeFormat that defines the culturally appropriate format of displaying dates and times.
            Default is ISO 8601 DateTime Format. Does not default to microsoft Date()
            </summary>
        </member>
        <member name="P:Genesys.Extras.Serialization.JsonSerializer`1.EmitTypeInformation">
            <summary>
            Gets or sets the data contract JSON serializer settings to emit type information.
            </summary>
        </member>
        <member name="M:Genesys.Extras.Serialization.JsonSerializer`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Serialization.JsonSerializer`1.#ctor(Genesys.Extras.Collections.IListSafe{System.Type})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Serialization.JsonSerializer`1.Serialize(`0)">
            <summary>
            Serializes and returns the JSON as a string
            </summary>
            <param name="objectToSerialize"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Serialization.JsonSerializer`1.Deserialize(System.String)">
            <summary>
            De-serializes the passed string to an object
            </summary>
            <param name="stringToDeserialize">Object to deserialize</param>
            <returns>Concrete class</returns>
        </member>
        <member name="T:Genesys.Extras.Serialization.Serializer`1">
            <summary>
            Generically typed Serialization and Deserialization
            </summary>
            <typeparam name="T">Type to serialize</typeparam>
        </member>
        <member name="P:Genesys.Extras.Serialization.Serializer`1.KnownTypes">
            <summary>
            List of types that allow serializer to use a type not explicitly defined. 
              Primarily used to define ISerialier Of IMyType, but pass in object of MyType 
              (serializer blows up on now knowing that MyType exists, only knows about IMyType)
            </summary>
        </member>
        <member name="P:Genesys.Extras.Serialization.Serializer`1.ThrowException">
            <summary>
            Setting to throw exception
            </summary>
        </member>
        <member name="P:Genesys.Extras.Serialization.Serializer`1.EmptyStringAndNullSupported">
            <summary>
            Setting to throw exception
            </summary>
        </member>
        <member name="M:Genesys.Extras.Serialization.Serializer`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Serialization.Serializer`1.#ctor(Genesys.Extras.Collections.IListSafe{System.Type})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Serialization.Serializer`1.Serialize(`0)">
            <summary>
            Serializes and returns the object as a string
            </summary>
            <param name="objectToSerialize"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Serialization.Serializer`1.Deserialize(System.String)">
            <summary>
            Deserialize
            </summary>
            <param name="stringToDeserialize"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Genesys.Extras.Text.Cleansing.Cleanser">
            <summary>
            Text Cleanser interface
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.Cleanser.CleanserId">
            <summary>
            Id of the target of this cleanser
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.Cleanser.TextToCleanse">
            <summary>
            Item to cleanse
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.Cleanser.TextCleansed">
            <summary>
            Result after cleanse
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.Cleanser.Cleanse">
            <summary>
            Worker that cleanses the text
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.Cleanser.CleanseAll(System.Object)">
            <summary>
            Cleanses all properties marked with CleanseFor attribute
            </summary>
            <param name="classToCleanse"></param>
        </member>
        <member name="T:Genesys.Extras.Text.Cleansing.CleanseFor">
            <summary>
            Connection string Attribute
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.CleanseFor.Default">
            <summary>
            Value of attribute
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.CleanseFor.Value">
            <summary>
            Value of attribute
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.CleanseFor.#ctor(Genesys.Extras.Text.Cleansing.CleanserIds)">
            <summary>
            Constructor
            </summary>
            <param name="value">Value to hydrate</param>
        </member>
        <member name="T:Genesys.Extras.Text.Cleansing.CleanserFactory">
            <summary>
            Factories out cleanser classes
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.CleanserFactory.Cleansers">
            <summary>
            Cleansers registered with the system
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.CleanserFactory.#ctor">
            <summary>
            Constructor
            Add approved and functional cleansers to the list here.
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.CleanserFactory.Construct(Genesys.Extras.Text.Cleansing.CleanserIds,System.String)">
            <summary>
            Constructs a cleanser by generic type
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Text.Cleansing.CleanserIds">
            <summary>
            enumeration to allow the attribute to use strongly-typed Id
            </summary>    
        </member>
        <member name="F:Genesys.Extras.Text.Cleansing.CleanserIds.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:Genesys.Extras.Text.Cleansing.CleanserIds.UnsafeHtml">
            <summary>
            Cross-site scripting attacking browser exposed objects
            </summary>
        </member>
        <member name="F:Genesys.Extras.Text.Cleansing.CleanserIds.SqlInjection">
            <summary>
            T-SQL Injection attack
            </summary>
        </member>
        <member name="F:Genesys.Extras.Text.Cleansing.CleanserIds.XmlInvalidChars">
            <summary>
            Invalid XML characters
            </summary>
        </member>
        <member name="T:Genesys.Extras.Text.Cleansing.DefaultCleanser">
            <summary>
            Cleanses and removes Html unsafe characters
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.DefaultCleanser.CleanserId">
            <summary>
            Target of this cleanser
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.DefaultCleanser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.DefaultCleanser.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="textToCleanse">Plain text to have characters cleansed</param>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.DefaultCleanser.Cleanse">
            <summary>
            Cleanses a string
            </summary>
        </member>
        <member name="T:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser">
            <summary>
            Cleanses and removes Html unsafe characters
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser.CleanserId">
            <summary>
            Target of this cleanser
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser.SafeTags">
            <summary>
            Array of safe tags
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser.SafeAttributes">
            <summary>
            Array of safe attributes
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser.SafeStyleKeys">
            <summary>
            Array of safe keys
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="textToCleanse">Plain text to have characters cleansed</param>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser.Cleanse">
            <summary>
            Cleanses a string
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser.CleanseUnsafeHtml(System.Xml.Linq.XDocument,System.Xml.Linq.XElement)">
            <summary>
            Recursive parser
            </summary>
            <param name="doc"></param>
            <param name="rootElement"></param>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser.FormatBeginTag(System.String)">
            <summary>
            Formats a begin tag
            </summary>
            <param name="tagName">Name of tag</param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.HtmlUnsafeCleanser.FormatEndTag(System.String)">
            <summary>
            Formats a end tag
            </summary>
            <param name="tagName">Name of tag</param>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Text.Cleansing.SqlInjectionCleanser">
            <summary>
            Cleanses and removes Html unsafe characters
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.SqlInjectionCleanser.CleanserId">
            <summary>
            Target of this cleanser
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.SqlInjectionCleanser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.SqlInjectionCleanser.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="textToCleanse">Plain text to have characters cleansed</param>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.SqlInjectionCleanser.Cleanse">
            <summary>
            Cleanses a string
            </summary>
        </member>
        <member name="T:Genesys.Extras.Text.Cleansing.XmlInvalidCharacterCleanser">
            <summary>
            Cleanses and removes Html unsafe characters
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.Cleansing.XmlInvalidCharacterCleanser.CleanserId">
            <summary>
            Target of this cleanser
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.XmlInvalidCharacterCleanser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.XmlInvalidCharacterCleanser.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="textToCleanse">Plain text to have characters cleansed</param>
        </member>
        <member name="M:Genesys.Extras.Text.Cleansing.XmlInvalidCharacterCleanser.Cleanse">
            <summary>
            Cleanses a string
            </summary>
        </member>
        <member name="T:Genesys.Extras.Text.Encoding.Base64Encoder">
            <summary>
            Encoders and decodes Base64 text
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.Base64Encoder.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="dataToProcess">Data to encrypt or decrypt</param>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.Base64Encoder.Encode">
            <summary>
            Encodes to Base64
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.Base64Encoder.Encode(System.String)">
            <summary>
            Encodes to Base64
            </summary>
            <param name="stringToEncode"></param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.Base64Encoder.Decode">
            <summary>
            Decodes from Base64
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.Base64Encoder.Decode(System.String)">
            <summary>
            Decodes from Base64
            </summary>
            <param name="stringToDecode"></param>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Text.Encoding.IEncoder">
            <summary>
            Encoding interface
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.IEncoder.Encode">
            <summary>
            Encode
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.IEncoder.Decode">
            <summary>
            Decode
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Text.Encoding.UrlEncoder">
            <summary>
            Encoders and decodes Base64 text
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.UrlEncoder.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="dataToProcess">Data to encrypt or decrypt</param>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.UrlEncoder.Encode">
            <summary>
            Encodes to Base64
            </summary>
            <returns>Url Encoded escaped string</returns>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.UrlEncoder.Encode(System.String)">
            <summary>
            Encodes to Base64
            </summary>
            <param name="stringToEncode"></param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.UrlEncoder.Decode">
            <summary>
            Decodes from Base64
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.Encoding.UrlEncoder.Decode(System.String)">
            <summary>
            Decodes from Base64
            </summary>
            <param name="stringToDecode"></param>sd
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Text.DateRelative">
            <summary>
            Relative date and time based on now/utc now.
            Responds with english text for relative time lapse
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.DateRelative.DateToCompare">
            <summary>
            DateToCompare
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.DateRelative.Difference">
            <summary>
            Difference
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.DateRelative.RelativeToDate">
            <summary>
            RelativeToDate
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.DateRelative.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.DateRelative.#ctor(System.DateTime)">
            <summary>
            Constructor that accepts date to compare to UtcNow
            </summary>
            <param name="dateToCompare"></param>
        </member>
        <member name="M:Genesys.Extras.Text.DateRelative.ToString">
            <summary>
            Determines relative difference between now and date
            </summary>
            <returns>English language representation of difference</returns>
        </member>
        <member name="M:Genesys.Extras.Text.DateRelative.RelativeDifferenceGet(System.DateTime)">
            <summary>
            Helper to get 
            </summary>
            <param name="compareDate"></param>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Text.StringMutable">
            <summary>
            Need string class with parameterless constructor so that base classes can require "GenericType with : new()"
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.StringMutable.Value">
            <summary>
            Value. Ignored for serialization, to spoof string behavior
            </summary>      
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.#ctor(System.String)">
            <summary>
             Constructor that sets string value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.ToLowerInvariant">
            <summary>
                Returns a copy of this System.String object converted to lowercase using the
                casing rules of the invariant culture.
            </summary>
            <returns>The lowercase equivalent of the current string</returns>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.ToUpperInvariant">
            <summary>
                Returns a copy of this System.String object converted to lowercase using the
                casing rules of the invariant culture.
            </summary>
            <returns>The uppercase equivalent of the current string</returns>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.Contains(System.String)">
            <summary>
            Expose contains through this wrapper class
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.op_Implicit(Genesys.Extras.Text.StringMutable)~System.String">
            <summary>
            Accepts mutable Genesys.Extras.Text.StringMutable instead of forcing consumer to cast to immutable System.String class
            </summary>
            <param name="item">Mutable string to treat as immutable .net String</param>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.op_Implicit(System.String)~Genesys.Extras.Text.StringMutable">
            <summary>
            Accepts (normal) immutable string instead of forcing consumer to cast to mutable string (this) class
            </summary>
            <param name="item">Mutable string to treat as immutable .net String</param>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.Equals(System.Object)">
            <summary>
            Test for data equivalence
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.GetHashCode">
            <summary>
            Hash identifier for this record
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.op_Equality(Genesys.Extras.Text.StringMutable,Genesys.Extras.Text.StringMutable)">
            <summary>
            Compares the equality of the string contents. 
            </summary>
            <param name="obj1">First item to compare</param>
            <param name="obj2">Second item to compare</param>
            <returns>True if contents are equal, false if contents are not equal.</returns>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.op_Inequality(Genesys.Extras.Text.StringMutable,Genesys.Extras.Text.StringMutable)">
            <summary>
            Compares the equality of the string contents. 
            </summary>
            <param name="obj1">First item to compare</param>
            <param name="obj2">Second item to compare</param>
            <returns>True if contents are equal, false if contents are not equal.</returns>
        </member>
        <member name="M:Genesys.Extras.Text.StringMutable.GetType">
            <summary>
            Returns type of string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Genesys.Extras.Text.RandomString">
            <summary>
            Produces random strings of mixed characters and integers
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.RandomString.Next(System.Int32)">
            <summary>
            Generates a random string of the given length
            </summary>
            <param name="length">Size of the string</param>
            <returns>Random string</returns>
        </member>
        <member name="T:Genesys.Extras.Text.TemplateBuilder">
            <summary>
            Handles formatting html text, such as filling HTML templates.
            </summary>
        </member>
        <member name="P:Genesys.Extras.Text.TemplateBuilder.ThrowException">
            <summary>
            Setting to re-throw exception
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.TemplateBuilder.#ctor">
            <summary>
            Constructor forcing Immutability
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.TemplateBuilder.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.TemplateBuilder.TemplateFill">
            <summary>
            Fills template
            </summary>
        </member>
        <member name="M:Genesys.Extras.Text.TemplateBuilder.ToString">
            <summary>
            Returns built HTML template with data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genesys.Extras.Text.TemplateBuilder.IsValid">
            <summary>
             Ensures data can be merged with template
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
